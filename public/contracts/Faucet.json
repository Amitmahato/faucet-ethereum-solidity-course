{
  "contractName": "Faucet",
  "abi": [
    {
      "inputs": [],
      "name": "getCurrentOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "numberOfFunders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "testFunc",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "testNum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [],
      "name": "emitLogs",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "addFunds",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "getAvailableFund",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "withdrawAmount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunderAtIndex",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "numberOfDonations",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalDonations",
              "type": "uint256"
            }
          ],
          "internalType": "struct Faucet.FunderInfo",
          "name": "funder",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getAllFunders",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "numberOfDonations",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalDonations",
              "type": "uint256"
            }
          ],
          "internalType": "struct Faucet.FunderInfo[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "justTesting",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"addFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emitLogs\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllFunders\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"numberOfDonations\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDonations\",\"type\":\"uint256\"}],\"internalType\":\"struct Faucet.FunderInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAvailableFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunderAtIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"numberOfDonations\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDonations\",\"type\":\"uint256\"}],\"internalType\":\"struct Faucet.FunderInfo\",\"name\":\"funder\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"justTesting\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfFunders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFunc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"justTesting()\":{\"notice\":\"modifiers: `pure` & `view` - no any gas fee incurs  view - indicates the given function will not change the storage state in any way pure - even more strict, it will not even allow reading the storage state\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/FaucetContract.sol\":\"Faucet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/FaucetContract.sol\":{\"keccak256\":\"0x1278141adb4d696d6e56784719243564aba612c1d37e9490cd1db71c56beba95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://435d2a1f6e363f888415299e970cfe5c7a22c6c71f68585935965514746bb7ce\",\"dweb:/ipfs/Qmchm9gt9Ph2d1HjS4q5H9ZK1U6SNgHPqvtABzTkg8hSBD\"]},\"project:/contracts/IFaucet.sol\":{\"keccak256\":\"0x44e24d660ac201eb0c1586feb13fa1ee84b7d8415827b821fc8a1149884644ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86415a5429ca69c037056e3aa0d236cd02765f54080d57e5c7bc52cb0cf79289\",\"dweb:/ipfs/QmYj7bVGZGccfCDTPyBdnfrnbnrTUNoLYut8Cf9cbJB3hG\"]},\"project:/contracts/Logger.sol\":{\"keccak256\":\"0x60000bced03abf08baa5cab15011749c4c40594993e6b2cefa68399ec1d7624f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e844151d3fc14fe1ebfe32bacdf324f5a90731974b8839d9b71fa84f9f06e96\",\"dweb:/ipfs/QmfEwp7F44vUcbnMW2GVVfzVdLhjWbSN1a999aCQJ1cygg\"]},\"project:/contracts/Owned.sol\":{\"keccak256\":\"0x758975a14a668bb9e96fea2e80eae315453c3ab25e8492b778238c61d6e89b37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5642a886d774e111fb9e28b418819b395315f7da5ff756694566cbcb56e38f5\",\"dweb:/ipfs/Qmb4K3xAu64wyciET1D8NYcTkat63ebxP74UC1ctSue6ug\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11676:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:6",
                "type": ""
              }
            ],
            "src": "7:77:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "155:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "172:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "195:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "177:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "177:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "165:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "165:37:6"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "143:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "150:3:6",
                "type": ""
              }
            ],
            "src": "90:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "312:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "322:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "334:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "345:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "330:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "330:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "322:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "402:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "415:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "426:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "411:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "411:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "358:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "358:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "284:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "296:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "307:4:6",
                "type": ""
              }
            ],
            "src": "214:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "482:35:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "492:19:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "508:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "502:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "492:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "475:6:6",
                "type": ""
              }
            ],
            "src": "442:75:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "612:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "629:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "632:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "622:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "622:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "622:12:6"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "523:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "735:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "752:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "755:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "745:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "745:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "745:12:6"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "646:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "812:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "869:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "878:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "881:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "871:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "871:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "871:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "835:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "860:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "842:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "842:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "832:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "832:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "825:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "825:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "822:63:6"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "805:5:6",
                "type": ""
              }
            ],
            "src": "769:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "949:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "959:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "981:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "968:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "968:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "959:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1024:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "997:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "997:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "997:33:6"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "927:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "935:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "943:5:6",
                "type": ""
              }
            ],
            "src": "897:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1108:263:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1154:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1156:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1156:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1156:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1129:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1138:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1125:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1125:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1150:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1121:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1121:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1118:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1247:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1262:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1276:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1266:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1291:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1326:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1337:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1322:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1322:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1346:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1301:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1301:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1291:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1078:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1089:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1101:6:6",
                "type": ""
              }
            ],
            "src": "1042:329:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1477:40:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1488:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1504:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1498:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1498:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1488:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1460:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1470:6:6",
                "type": ""
              }
            ],
            "src": "1377:140:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1660:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1677:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1682:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1670:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1670:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1670:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1698:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1717:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1722:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1713:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1713:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1698:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1632:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1637:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1648:11:6",
                "type": ""
              }
            ],
            "src": "1523:210:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1837:60:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1847:11:6",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "1855:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "1847:4:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1868:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "1880:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1885:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1876:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1876:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "1868:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "1824:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1832:4:6",
                "type": ""
              }
            ],
            "src": "1739:158:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1958:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1975:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1998:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1980:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1980:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1968:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1968:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1968:37:6"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1946:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1953:3:6",
                "type": ""
              }
            ],
            "src": "1903:108:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2185:414:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2195:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2211:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2216:4:6",
                        "type": "",
                        "value": "0x40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2207:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2207:14:6"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "2199:4:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2231:177:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2279:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2309:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2316:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2305:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2305:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2299:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2299:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2283:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2369:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2387:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2392:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2383:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2383:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2335:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2335:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2335:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2418:174:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2463:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2493:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2500:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2489:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2489:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2483:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2483:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2467:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2553:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2571:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2576:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2567:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2567:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2519:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2519:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2519:63:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_FunderInfo_$19_memory_ptr_to_t_struct$_FunderInfo_$19_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2172:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2179:3:6",
                "type": ""
              }
            ],
            "src": "2077:522:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2737:151:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2833:6:6"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2841:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_FunderInfo_$19_memory_ptr_to_t_struct$_FunderInfo_$19_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2747:85:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2747:98:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2747:98:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2854:28:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2872:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2877:4:6",
                        "type": "",
                        "value": "0x40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2868:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2868:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "2854:10:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_struct$_FunderInfo_$19_memory_ptr_to_t_struct$_FunderInfo_$19_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2710:6:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2718:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "2726:10:6",
                "type": ""
              }
            ],
            "src": "2605:283:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2995:38:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3005:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "3017:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3022:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3013:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3013:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "3005:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "2982:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "2990:4:6",
                "type": ""
              }
            ],
            "src": "2894:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3279:764:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3289:94:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3377:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3303:73:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3303:80:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3293:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3392:119:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3499:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3504:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3399:99:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3399:112:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3392:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3520:97:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3611:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3535:75:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3535:82:6"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "3524:7:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3626:21:6",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "3640:7:6"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "3630:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3716:302:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3730:34:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "3757:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3751:5:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3751:13:6"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "3734:13:6",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3777:122:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "3880:13:6"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "3895:3:6"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_struct$_FunderInfo_$19_memory_ptr_to_t_struct$_FunderInfo_$19_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "3784:95:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3784:115:6"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3777:3:6"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3912:96:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4001:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "3922:78:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3922:86:6"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3912:6:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3678:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3681:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3675:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3675:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3689:18:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3691:14:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3700:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3703:1:6",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3696:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3696:9:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3691:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3660:14:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3662:10:6",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3671:1:6",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "3666:1:6",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "3656:362:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4027:10:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4034:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4027:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3258:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3265:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3274:3:6",
                "type": ""
              }
            ],
            "src": "3103:940:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4249:277:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4259:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4271:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4282:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4267:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4267:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4259:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4306:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4317:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4302:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4302:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4325:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4331:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4321:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4321:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4295:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4295:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4295:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4351:168:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4505:6:6"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4514:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4359:145:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4359:160:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4351:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4221:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4233:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4244:4:6",
                "type": ""
              }
            ],
            "src": "4049:477:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4577:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4587:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4598:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4587:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4559:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4569:7:6",
                "type": ""
              }
            ],
            "src": "4532:77:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4680:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4697:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4720:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "4702:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4702:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4690:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4690:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4690:37:6"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4668:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4675:3:6",
                "type": ""
              }
            ],
            "src": "4615:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4837:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4847:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4859:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4870:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4855:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4855:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4847:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4927:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4940:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4951:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4936:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4936:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4883:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4883:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4883:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4809:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4821:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4832:4:6",
                "type": ""
              }
            ],
            "src": "4739:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5012:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5022:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5037:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5044:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5033:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5033:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5022:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4994:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5004:7:6",
                "type": ""
              }
            ],
            "src": "4967:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5144:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5154:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5183:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "5165:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5165:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5154:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5126:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5136:7:6",
                "type": ""
              }
            ],
            "src": "5099:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5266:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5283:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5306:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5288:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5288:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5276:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5276:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5276:37:6"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5254:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5261:3:6",
                "type": ""
              }
            ],
            "src": "5201:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5423:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5433:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5445:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5456:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5441:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5441:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5433:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5513:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5526:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5537:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5522:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5522:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5469:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5469:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5469:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5395:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5407:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5418:4:6",
                "type": ""
              }
            ],
            "src": "5325:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5731:414:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5741:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5757:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5762:4:6",
                        "type": "",
                        "value": "0x40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5753:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5753:14:6"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "5745:4:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5777:177:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5825:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5855:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5862:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5851:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5851:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5845:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5845:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "5829:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "5915:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5933:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5938:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5929:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5929:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5881:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5881:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5881:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5964:174:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6009:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6039:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6046:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6035:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6035:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6029:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6029:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "6013:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "6099:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "6117:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6122:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6113:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6113:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6065:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6065:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6065:63:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_FunderInfo_$19_memory_ptr_to_t_struct$_FunderInfo_$19_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5718:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5725:3:6",
                "type": ""
              }
            ],
            "src": "5613:532:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6301:176:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6311:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6323:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6334:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6319:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6319:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6311:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6443:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6456:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6467:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6452:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6452:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_FunderInfo_$19_memory_ptr_to_t_struct$_FunderInfo_$19_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6347:95:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6347:123:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6347:123:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_FunderInfo_$19_memory_ptr__to_t_struct$_FunderInfo_$19_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6273:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6285:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6296:4:6",
                "type": ""
              }
            ],
            "src": "6151:326:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6526:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6583:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6592:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6595:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6585:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6585:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6585:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6549:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6574:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "6556:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6556:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6546:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6546:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6539:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6539:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "6536:63:6"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6519:5:6",
                "type": ""
              }
            ],
            "src": "6483:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6663:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6673:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6695:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6682:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6682:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "6673:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6738:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "6711:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6711:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6711:33:6"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "6641:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6649:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6657:5:6",
                "type": ""
              }
            ],
            "src": "6611:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6822:263:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6868:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6870:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6870:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6870:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6843:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6852:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6839:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6839:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6864:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6835:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6835:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "6832:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6961:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6976:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6990:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6980:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7005:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7040:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7051:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7036:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7036:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7060:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7015:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7015:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7005:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6792:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6803:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6815:6:6",
                "type": ""
              }
            ],
            "src": "6756:329:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7187:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7204:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7209:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7197:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7197:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7197:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7225:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7244:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7249:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7240:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7240:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "7225:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7159:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7164:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7175:11:6",
                "type": ""
              }
            ],
            "src": "7091:169:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7372:129:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7394:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7402:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7390:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7390:14:6"
                      },
                      {
                        "hexValue": "576974686472617720616d6f756e742063616e6e6f7420626520677265617465",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7406:34:6",
                        "type": "",
                        "value": "Withdraw amount cannot be greate"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7383:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7383:58:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7383:58:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7462:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7470:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7458:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7458:15:6"
                      },
                      {
                        "hexValue": "72207468616e20302e31206574686572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7475:18:6",
                        "type": "",
                        "value": "r than 0.1 ether"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7451:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7451:43:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7451:43:6"
                }
              ]
            },
            "name": "store_literal_in_memory_ef5f77fb52690bea807fe570986f1f372fc9268498e1b3677417896c667d9b04",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7364:6:6",
                "type": ""
              }
            ],
            "src": "7266:235:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7653:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7663:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7729:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7734:2:6",
                        "type": "",
                        "value": "48"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7670:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7670:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7663:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7835:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ef5f77fb52690bea807fe570986f1f372fc9268498e1b3677417896c667d9b04",
                      "nodeType": "YulIdentifier",
                      "src": "7746:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7746:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7746:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7848:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7859:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7864:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7855:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7855:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7848:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ef5f77fb52690bea807fe570986f1f372fc9268498e1b3677417896c667d9b04_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7641:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7649:3:6",
                "type": ""
              }
            ],
            "src": "7507:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8050:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8060:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8072:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8083:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8068:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8068:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8060:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8107:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8118:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8103:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8103:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8126:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8132:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8122:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8122:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8096:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8096:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8096:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8152:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8286:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ef5f77fb52690bea807fe570986f1f372fc9268498e1b3677417896c667d9b04_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8160:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8160:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8152:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ef5f77fb52690bea807fe570986f1f372fc9268498e1b3677417896c667d9b04__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8030:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8045:4:6",
                "type": ""
              }
            ],
            "src": "7879:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8410:134:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8432:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8440:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8428:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8428:14:6"
                      },
                      {
                        "hexValue": "496e73756666696369656e742066756e6420666f722074686520726571756573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8444:34:6",
                        "type": "",
                        "value": "Insufficient fund for the reques"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8421:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8421:58:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8421:58:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8500:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8508:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8496:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8496:15:6"
                      },
                      {
                        "hexValue": "746564207769746864726177616c20616d6f756e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8513:23:6",
                        "type": "",
                        "value": "ted withdrawal amount"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8489:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8489:48:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8489:48:6"
                }
              ]
            },
            "name": "store_literal_in_memory_ce7096bd9cb0545aeefc0bc22c48cdeb024f26114f45277c91f0841533660af6",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8402:6:6",
                "type": ""
              }
            ],
            "src": "8304:240:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8696:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8706:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8772:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8777:2:6",
                        "type": "",
                        "value": "53"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8713:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8713:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8706:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8878:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ce7096bd9cb0545aeefc0bc22c48cdeb024f26114f45277c91f0841533660af6",
                      "nodeType": "YulIdentifier",
                      "src": "8789:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8789:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8789:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8891:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8902:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8907:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8898:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8898:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8891:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ce7096bd9cb0545aeefc0bc22c48cdeb024f26114f45277c91f0841533660af6_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8684:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8692:3:6",
                "type": ""
              }
            ],
            "src": "8550:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9093:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9103:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9115:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9126:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9111:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9111:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9103:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9150:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9161:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9146:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9146:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9169:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9175:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9165:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9165:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9139:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9139:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9139:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9195:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9329:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ce7096bd9cb0545aeefc0bc22c48cdeb024f26114f45277c91f0841533660af6_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9203:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9203:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9195:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ce7096bd9cb0545aeefc0bc22c48cdeb024f26114f45277c91f0841533660af6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9073:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9088:4:6",
                "type": ""
              }
            ],
            "src": "8922:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9375:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9392:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9395:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9385:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9385:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9385:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9489:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9492:4:6",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9482:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9482:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9482:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9513:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9516:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9506:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9506:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9506:15:6"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "9347:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9578:146:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9588:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9611:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9593:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9593:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "9588:1:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9622:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9645:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9627:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9627:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "9622:1:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9669:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9671:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9671:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9671:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9663:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9666:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9660:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9660:8:6"
                  },
                  "nodeType": "YulIf",
                  "src": "9657:34:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9701:17:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9713:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9716:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "9709:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9709:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "9701:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9564:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9567:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "9573:4:6",
                "type": ""
              }
            ],
            "src": "9533:191:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9758:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9775:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9778:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9768:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9768:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9768:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9872:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9875:4:6",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9865:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9865:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9865:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9896:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9899:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9889:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9889:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9889:15:6"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "9730:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9944:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9961:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9964:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9954:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9954:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9954:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10058:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10061:4:6",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10051:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10051:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10051:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10082:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10085:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10075:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10075:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10075:15:6"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "9916:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10145:190:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10155:33:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10182:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10164:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10164:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "10155:5:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10278:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10280:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10280:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10280:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10203:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10210:66:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "10200:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10200:77:6"
                  },
                  "nodeType": "YulIf",
                  "src": "10197:103:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10309:20:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10320:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10327:1:6",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10316:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10316:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "10309:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10131:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "10141:3:6",
                "type": ""
              }
            ],
            "src": "10102:233:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10447:118:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10469:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10477:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10465:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10465:14:6"
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f776e65722063616e206163636573732074686973206d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10481:34:6",
                        "type": "",
                        "value": "Only the owner can access this m"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10458:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10458:58:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10458:58:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10537:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10545:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10533:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10533:15:6"
                      },
                      {
                        "hexValue": "6574686f64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10550:7:6",
                        "type": "",
                        "value": "ethod"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10526:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10526:32:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10526:32:6"
                }
              ]
            },
            "name": "store_literal_in_memory_92ad3bab2fdafc01c47824412459fff7224d23ddb3245d0875fc6297a2fb0ed7",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10439:6:6",
                "type": ""
              }
            ],
            "src": "10341:224:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10717:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10727:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10793:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10798:2:6",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10734:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10734:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10727:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10899:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_92ad3bab2fdafc01c47824412459fff7224d23ddb3245d0875fc6297a2fb0ed7",
                      "nodeType": "YulIdentifier",
                      "src": "10810:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10810:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10810:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10912:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10923:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10928:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10919:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10919:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10912:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_92ad3bab2fdafc01c47824412459fff7224d23ddb3245d0875fc6297a2fb0ed7_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10705:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10713:3:6",
                "type": ""
              }
            ],
            "src": "10571:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11114:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11124:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11136:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11147:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11132:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11132:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11124:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11171:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11182:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11167:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11167:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11190:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11196:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11186:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11186:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11160:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11160:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11160:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11216:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11350:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_92ad3bab2fdafc01c47824412459fff7224d23ddb3245d0875fc6297a2fb0ed7_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11224:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11224:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11216:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_92ad3bab2fdafc01c47824412459fff7224d23ddb3245d0875fc6297a2fb0ed7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11094:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11109:4:6",
                "type": ""
              }
            ],
            "src": "10943:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11412:261:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11422:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11445:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11427:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11427:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "11422:1:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11456:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11479:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11461:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11461:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "11456:1:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11619:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11621:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11621:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11621:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11540:1:6"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11547:66:6",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "11615:1:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11543:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11543:74:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11537:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11537:81:6"
                  },
                  "nodeType": "YulIf",
                  "src": "11534:107:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11651:16:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11662:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11665:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11658:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11658:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "11651:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11399:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11402:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "11408:3:6",
                "type": ""
              }
            ],
            "src": "11368:305:6"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct Faucet.FunderInfo -> struct Faucet.FunderInfo\n    function abi_encode_t_struct$_FunderInfo_$19_memory_ptr_to_t_struct$_FunderInfo_$19_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // numberOfDonations\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // totalDonations\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_FunderInfo_$19_memory_ptr_to_t_struct$_FunderInfo_$19_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_FunderInfo_$19_memory_ptr_to_t_struct$_FunderInfo_$19_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x40)\n    }\n\n    function array_nextElement_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct Faucet.FunderInfo[] -> struct Faucet.FunderInfo[]\n    function abi_encode_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_FunderInfo_$19_memory_ptr_to_t_struct$_FunderInfo_$19_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    // struct Faucet.FunderInfo -> struct Faucet.FunderInfo\n    function abi_encode_t_struct$_FunderInfo_$19_memory_ptr_to_t_struct$_FunderInfo_$19_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // numberOfDonations\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // totalDonations\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_FunderInfo_$19_memory_ptr__to_t_struct$_FunderInfo_$19_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_FunderInfo_$19_memory_ptr_to_t_struct$_FunderInfo_$19_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ef5f77fb52690bea807fe570986f1f372fc9268498e1b3677417896c667d9b04(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdraw amount cannot be greate\")\n\n        mstore(add(memPtr, 32), \"r than 0.1 ether\")\n\n    }\n\n    function abi_encode_t_stringliteral_ef5f77fb52690bea807fe570986f1f372fc9268498e1b3677417896c667d9b04_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_ef5f77fb52690bea807fe570986f1f372fc9268498e1b3677417896c667d9b04(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ef5f77fb52690bea807fe570986f1f372fc9268498e1b3677417896c667d9b04__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ef5f77fb52690bea807fe570986f1f372fc9268498e1b3677417896c667d9b04_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ce7096bd9cb0545aeefc0bc22c48cdeb024f26114f45277c91f0841533660af6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient fund for the reques\")\n\n        mstore(add(memPtr, 32), \"ted withdrawal amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_ce7096bd9cb0545aeefc0bc22c48cdeb024f26114f45277c91f0841533660af6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 53)\n        store_literal_in_memory_ce7096bd9cb0545aeefc0bc22c48cdeb024f26114f45277c91f0841533660af6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ce7096bd9cb0545aeefc0bc22c48cdeb024f26114f45277c91f0841533660af6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ce7096bd9cb0545aeefc0bc22c48cdeb024f26114f45277c91f0841533660af6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_92ad3bab2fdafc01c47824412459fff7224d23ddb3245d0875fc6297a2fb0ed7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the owner can access this m\")\n\n        mstore(add(memPtr, 32), \"ethod\")\n\n    }\n\n    function abi_encode_t_stringliteral_92ad3bab2fdafc01c47824412459fff7224d23ddb3245d0875fc6297a2fb0ed7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_92ad3bab2fdafc01c47824412459fff7224d23ddb3245d0875fc6297a2fb0ed7(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_92ad3bab2fdafc01c47824412459fff7224d23ddb3245d0875fc6297a2fb0ed7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_92ad3bab2fdafc01c47824412459fff7224d23ddb3245d0875fc6297a2fb0ed7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "136:3377:0:-:0;;;;;;;;;;;;;138:10:4;130:5;;:18;;;;;;;;;;;;;;;;;;241:9:2;231:7;:19;;;;136:3377:0;;;;;;",
  "deployedSourceMap": "136:3377:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;319:78:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2379:161:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2683:285;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1646:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2288:86;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;385:90:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3208:76:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1750:534;;;:::i;:::-;;188:19:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2544:135:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;435:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;479:91:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;319:78:2;367:4;385:7;;378:14;;319:78;:::o;2379:161:0:-;2441:14;1031:18;1013:14;:36;;1005:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;1134:4;;1116:14;:22;;1108:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;2471:10:::1;2463:28;;:44;2492:14;2463:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2521:14;2513:4;;:22;;;;;;;:::i;:::-;;;;;;;;2379:161:::0;;:::o;2683:285::-;2728:19;2755:28;2803:15;;2786:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2755:64;;2830:10;2825:117;2854:15;;2846:5;:23;2825:117;;;2906:7;:29;2914:13;:20;2928:5;2914:20;;;;;;;;;;;;;;;;;;;;;2906:29;;;;;;;;;;;;;;;2888:47;;;;;;;;;;;;;;;;;;;;;;;;;:8;2897:5;2888:15;;;;;;;;:::i;:::-;;;;;;;:47;;;;2871:7;;;;;:::i;:::-;;;;2825:117;;;;2955:8;2948:15;;;2683:285;:::o;1646:100::-;1695:7;1709:32;;;1646:100;:::o;2288:86::-;2346:4;317:10:4;308:19;;:5;;;;;;;;;;:19;;;300:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2365:4:0::1;;2358:11;;2288:86:::0;:::o;385:90:4:-;444:7;317:10;308:19;;:5;;;;;;;;;;:19;;;300:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;465:5:::1;::::0;::::1;;;;;;;;458:12;;385:90:::0;:::o;3208:76:0:-;3253:4;3273:5;3266:12;;3208:76;:::o;1750:534::-;1792:21;1816:10;1792:34;;1849:1;1837:9;:13;1833:51;;;1868:9;1860:4;;:17;;;;;;;:::i;:::-;;;;;;;;1833:51;1937:1;1893:7;:22;1901:13;1893:22;;;;;;;;;;;;;;;:40;;;:45;1890:390;;;1947:10;1960:15;;:17;;;;;;;;;:::i;:::-;;;;;1947:30;;2017:87;;;;;;;;2058:1;2017:87;;;;2086:9;2017:87;;;1992:7;:22;2000:13;1992:22;;;;;;;;;;;;;;;:112;;;;;;;;;;;;;;;;;;;2136:13;2113;:20;2127:5;2113:20;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;1939:217;1890:390;;;2214:1;2170:7;:22;2178:13;2170:22;;;;;;;;;;;;;;;:40;;;:45;;;;;;;:::i;:::-;;;;;;;;2264:9;2223:7;:22;2231:13;2223:22;;;;;;;;;;;;;;;:37;;;:50;;;;;;;:::i;:::-;;;;;;;;1890:390;1786:498;1750:534::o;188:19:2:-;;;;:::o;2544:135:0:-;2604:24;;:::i;:::-;2645:7;:29;2653:13;:20;2667:5;2653:20;;;;;;;;;;;;;;;;;;;;;2645:29;;;;;;;;;;;;;;;2636:38;;;;;;;;;;;;;;;;;;;;;;;;;;;2544:135;;;:::o;435:27::-;;;;:::o;479:91:4:-;317:10;308:19;;:5;;;;;;;;;;:19;;;300:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;557:8:::1;549:5;::::0;:16:::1;;;;;;;;;;;;;;;;;;479:91:::0;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;7:77:6:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:140::-;1470:6;1504:5;1498:12;1488:22;;1377:140;;;:::o;1523:210::-;1648:11;1682:6;1677:3;1670:19;1722:4;1717:3;1713:14;1698:29;;1523:210;;;;:::o;1739:158::-;1832:4;1855:3;1847:11;;1885:4;1880:3;1876:14;1868:22;;1739:158;;;:::o;1903:108::-;1980:24;1998:5;1980:24;:::i;:::-;1975:3;1968:37;1903:108;;:::o;2077:522::-;2216:4;2211:3;2207:14;2316:4;2309:5;2305:16;2299:23;2335:63;2392:4;2387:3;2383:14;2369:12;2335:63;:::i;:::-;2231:177;2500:4;2493:5;2489:16;2483:23;2519:63;2576:4;2571:3;2567:14;2553:12;2519:63;:::i;:::-;2418:174;2185:414;2077:522;;:::o;2605:283::-;2726:10;2747:98;2841:3;2833:6;2747:98;:::i;:::-;2877:4;2872:3;2868:14;2854:28;;2605:283;;;;:::o;2894:139::-;2990:4;3022;3017:3;3013:14;3005:22;;2894:139;;;:::o;3103:940::-;3274:3;3303:80;3377:5;3303:80;:::i;:::-;3399:112;3504:6;3499:3;3399:112;:::i;:::-;3392:119;;3535:82;3611:5;3535:82;:::i;:::-;3640:7;3671:1;3656:362;3681:6;3678:1;3675:13;3656:362;;;3757:6;3751:13;3784:115;3895:3;3880:13;3784:115;:::i;:::-;3777:122;;3922:86;4001:6;3922:86;:::i;:::-;3912:96;;3716:302;3703:1;3700;3696:9;3691:14;;3656:362;;;3660:14;4034:3;4027:10;;3279:764;;;3103:940;;;;:::o;4049:477::-;4244:4;4282:2;4271:9;4267:18;4259:26;;4331:9;4325:4;4321:20;4317:1;4306:9;4302:17;4295:47;4359:160;4514:4;4505:6;4359:160;:::i;:::-;4351:168;;4049:477;;;;:::o;4532:77::-;4569:7;4598:5;4587:16;;4532:77;;;:::o;4615:118::-;4702:24;4720:5;4702:24;:::i;:::-;4697:3;4690:37;4615:118;;:::o;4739:222::-;4832:4;4870:2;4859:9;4855:18;4847:26;;4883:71;4951:1;4940:9;4936:17;4927:6;4883:71;:::i;:::-;4739:222;;;;:::o;4967:126::-;5004:7;5044:42;5037:5;5033:54;5022:65;;4967:126;;;:::o;5099:96::-;5136:7;5165:24;5183:5;5165:24;:::i;:::-;5154:35;;5099:96;;;:::o;5201:118::-;5288:24;5306:5;5288:24;:::i;:::-;5283:3;5276:37;5201:118;;:::o;5325:222::-;5418:4;5456:2;5445:9;5441:18;5433:26;;5469:71;5537:1;5526:9;5522:17;5513:6;5469:71;:::i;:::-;5325:222;;;;:::o;5613:532::-;5762:4;5757:3;5753:14;5862:4;5855:5;5851:16;5845:23;5881:63;5938:4;5933:3;5929:14;5915:12;5881:63;:::i;:::-;5777:177;6046:4;6039:5;6035:16;6029:23;6065:63;6122:4;6117:3;6113:14;6099:12;6065:63;:::i;:::-;5964:174;5731:414;5613:532;;:::o;6151:326::-;6296:4;6334:2;6323:9;6319:18;6311:26;;6347:123;6467:1;6456:9;6452:17;6443:6;6347:123;:::i;:::-;6151:326;;;;:::o;6483:122::-;6556:24;6574:5;6556:24;:::i;:::-;6549:5;6546:35;6536:63;;6595:1;6592;6585:12;6536:63;6483:122;:::o;6611:139::-;6657:5;6695:6;6682:20;6673:29;;6711:33;6738:5;6711:33;:::i;:::-;6611:139;;;;:::o;6756:329::-;6815:6;6864:2;6852:9;6843:7;6839:23;6835:32;6832:119;;;6870:79;;:::i;:::-;6832:119;6990:1;7015:53;7060:7;7051:6;7040:9;7036:22;7015:53;:::i;:::-;7005:63;;6961:117;6756:329;;;;:::o;7091:169::-;7175:11;7209:6;7204:3;7197:19;7249:4;7244:3;7240:14;7225:29;;7091:169;;;;:::o;7266:235::-;7406:34;7402:1;7394:6;7390:14;7383:58;7475:18;7470:2;7462:6;7458:15;7451:43;7266:235;:::o;7507:366::-;7649:3;7670:67;7734:2;7729:3;7670:67;:::i;:::-;7663:74;;7746:93;7835:3;7746:93;:::i;:::-;7864:2;7859:3;7855:12;7848:19;;7507:366;;;:::o;7879:419::-;8045:4;8083:2;8072:9;8068:18;8060:26;;8132:9;8126:4;8122:20;8118:1;8107:9;8103:17;8096:47;8160:131;8286:4;8160:131;:::i;:::-;8152:139;;7879:419;;;:::o;8304:240::-;8444:34;8440:1;8432:6;8428:14;8421:58;8513:23;8508:2;8500:6;8496:15;8489:48;8304:240;:::o;8550:366::-;8692:3;8713:67;8777:2;8772:3;8713:67;:::i;:::-;8706:74;;8789:93;8878:3;8789:93;:::i;:::-;8907:2;8902:3;8898:12;8891:19;;8550:366;;;:::o;8922:419::-;9088:4;9126:2;9115:9;9111:18;9103:26;;9175:9;9169:4;9165:20;9161:1;9150:9;9146:17;9139:47;9203:131;9329:4;9203:131;:::i;:::-;9195:139;;8922:419;;;:::o;9347:180::-;9395:77;9392:1;9385:88;9492:4;9489:1;9482:15;9516:4;9513:1;9506:15;9533:191;9573:4;9593:20;9611:1;9593:20;:::i;:::-;9588:25;;9627:20;9645:1;9627:20;:::i;:::-;9622:25;;9666:1;9663;9660:8;9657:34;;;9671:18;;:::i;:::-;9657:34;9716:1;9713;9709:9;9701:17;;9533:191;;;;:::o;9730:180::-;9778:77;9775:1;9768:88;9875:4;9872:1;9865:15;9899:4;9896:1;9889:15;9916:180;9964:77;9961:1;9954:88;10061:4;10058:1;10051:15;10085:4;10082:1;10075:15;10102:233;10141:3;10164:24;10182:5;10164:24;:::i;:::-;10155:33;;10210:66;10203:5;10200:77;10197:103;;;10280:18;;:::i;:::-;10197:103;10327:1;10320:5;10316:13;10309:20;;10102:233;;;:::o;10341:224::-;10481:34;10477:1;10469:6;10465:14;10458:58;10550:7;10545:2;10537:6;10533:15;10526:32;10341:224;:::o;10571:366::-;10713:3;10734:67;10798:2;10793:3;10734:67;:::i;:::-;10727:74;;10810:93;10899:3;10810:93;:::i;:::-;10928:2;10923:3;10919:12;10912:19;;10571:366;;;:::o;10943:419::-;11109:4;11147:2;11136:9;11132:18;11124:26;;11196:9;11190:4;11186:20;11182:1;11171:9;11167:17;11160:47;11224:131;11350:4;11224:131;:::i;:::-;11216:139;;10943:419;;;:::o;11368:305::-;11408:3;11427:20;11445:1;11427:20;:::i;:::-;11422:25;;11461:20;11479:1;11461:20;:::i;:::-;11456:25;;11615:1;11547:66;11543:74;11540:1;11537:81;11534:107;;;11621:18;;:::i;:::-;11534:107;11665:1;11662;11658:9;11651:16;;11368:305;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nimport \"./Owned.sol\";\nimport \"./Logger.sol\";\nimport \"./IFaucet.sol\";\n\ncontract Faucet is Owned, Logger, IFaucet {\n  \n  // `public` - can be accessible throw the getter method outside the smart contract\n  // `private` - can be accessible only within the smart contract\n  // `internal` - can be accessible within the smart contract and also the derived smart contracts\n  uint public numberOfFunders;\n  uint private fund;\n  struct FunderInfo {\n    uint numberOfDonations;\n    uint totalDonations;\n  }\n  mapping(address => FunderInfo) private funders;\n  mapping(uint => address) private lookUpFunders;\n\n  /**\n      The modifier can be place at the definition of any method of the contract,\n      and is something like a middleware, \n      this `limitWithdrawal` modifier can be reused as a modifier\n      the `_` here will call the function body if the required conditions are passed\n   */\n  modifier limitWithdrawal(uint withdrawAmount){\n    require(withdrawAmount <= 100000000000000000, \"Withdraw amount cannot be greater than 0.1 ether\");\n    require(withdrawAmount <= fund, \"Insufficient fund for the requested withdrawal amount\");\n    _;\n  }\n\n  /**\n    - this is a special function\n    - it's called when you make a tx that doesn't specify function name to call\n    - It executes on calls to the contract with no data (calldata), e.g. calls made via send() or transfer().\n    \n    - External function are part of the contract interface \n      which means they can be called via contracts and other txs\n   */\n\n  receive() external payable {\n    // React to receiving ether\n  }\n\n  function emitLogs() public override pure returns(bytes32){\n    return \"Hello Web3, from Faucet\";\n  }\n\n  function addFunds() external payable{\n    address funderAddress = msg.sender;\n\n    if (msg.value > 0) {\n      fund += msg.value;\n    }\n\n    if(funders[funderAddress].numberOfDonations == 0){\n      uint index = numberOfFunders++;\n      \n      funders[funderAddress] = FunderInfo({\n        numberOfDonations : 1,\n        totalDonations : msg.value\n      });\n\n      lookUpFunders[index] = funderAddress;\n    } else {\n      funders[funderAddress].numberOfDonations += 1;\n      funders[funderAddress].totalDonations += msg.value;\n    }\n  }\n\n  function getAvailableFund() public view onlyOwner returns(uint) {\n    return fund;\n  }\n\n\n  function withdraw(uint withdrawAmount) public limitWithdrawal(withdrawAmount) {\n    payable(msg.sender).transfer(withdrawAmount);\n    fund -= withdrawAmount;\n  }\n\n  function getFunderAtIndex(uint index) public view returns ( FunderInfo memory funder) {\n    funder = funders[lookUpFunders[index]];\n  }\n\n  function getAllFunders() public view returns(FunderInfo[] memory) {\n    FunderInfo[] memory _funders = new FunderInfo[](numberOfFunders);\n    for (uint index = 0; index < numberOfFunders; index++) {\n      _funders[index] = funders[lookUpFunders[index]];\n    }\n\n    return _funders;\n  }\n\n  /**\n    modifiers: `pure` & `view` - no any gas fee incurs \n      view - indicates the given function will not change the storage state in any way\n      pure - even more strict, it will not even allow reading the storage state\n   */\n   function justTesting() external pure returns(uint) {\n     return 2 + 2;\n   }\n\n  // Transactions: generates chanages in storage state & incurs gas fees\n\n\n  // In order to talk to the nodes on the network, we can make JSON-RPC http call, \n  // which is actually being used internally by `truffle` & `web3`\n}\n\n// Block info\n// Nonce - a hash that when combined with the minHash proves that\n// the block has gone through proof of work(POW)\n// 8 bytes => 64 bits\n\n/**\n    Commands to:\n     // get an instance of Faucet contract\n     const instance = await Faucet.deployed();\n\n     1. add funds \n     // 1.5 ETH\n     => await instance.addFunds({ from: accounts[0], value: 1500000000000000000 });\n     \n     // 1.7 ETH\n     => await instance.addFunds({ from: accounts[1], value: 1700000000000000000 });\n\n     2. get fund\n     => (await instance.getAvailableFund()).toString()\n\n     3. get number of funders\n     => (await instance.numberOfFunders()).toString();\n\n     4. get funder at a given index\n     => await instance.getFunderAtIndex(0);\n     => await instance.getFunderAtIndex(1);\n     => await instance.getFunderAtIndex(2);\n\n     5. get a list of funders\n     => await instance.getAllFunders();\n\n     6. withdraw funds upto 1 ETH\n     // withdraw 0.5 ETH \n     => await instance.withdraw(\"50000000000000000\", { from: accounts[0] });\n\n     // try to withdraw 1.5 ETH, although the transaction is successfull, the transfer of ether isn't actually made\n     => await instance.withdraw(\"1500000000000000000\", { from: accounts[0] });\n\n     7. Access onlyOwner methods\n     => await instance.getCurrentOwner();\n     => await instance.transferOwnership(accounts[1]);\n     \n     // Will fail with error `Only the owner can access this method`, \n     //  since by default the from field is populated with accounts[0] but this account is not the owner\n     => await instance.getCurrentOwner();\n     \n     // Will fail with error `Only the owner can access this method`, \n     //  since by default the from field is populated with accounts[0] but this account is not the owner\n     => await instance.transferOwnership(accounts[0]);\n\n     => await instance.getCurrentOwner({ from: accounts[1] }); // will be executed successfully\n\n     8. Overriden emitLogs() method fromt the abstract Logger contract\n     => await instance.emitLogs();\n     => await instance.testFunc();\n */",
  "sourcePath": "/Users/amitmahato/ReadyToWork/RND/Blockchain/faucet/contracts/FaucetContract.sol",
  "ast": {
    "absolutePath": "project:/contracts/FaucetContract.sol",
    "exportedSymbols": {
      "Faucet": [
        233
      ],
      "IFaucet": [
        245
      ],
      "Logger": [
        274
      ],
      "Owned": [
        356
      ]
    },
    "id": 234,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "absolutePath": "project:/contracts/Owned.sol",
        "file": "./Owned.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 234,
        "sourceUnit": 357,
        "src": "66:21:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Logger.sol",
        "file": "./Logger.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 234,
        "sourceUnit": 275,
        "src": "88:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/IFaucet.sol",
        "file": "./IFaucet.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 234,
        "sourceUnit": 246,
        "src": "111:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "Owned",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 356,
              "src": "155:5:0"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "155:5:0"
          },
          {
            "baseName": {
              "id": 7,
              "name": "Logger",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 274,
              "src": "162:6:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "162:6:0"
          },
          {
            "baseName": {
              "id": 9,
              "name": "IFaucet",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 245,
              "src": "170:7:0"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "170:7:0"
          }
        ],
        "canonicalName": "Faucet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 233,
        "linearizedBaseContracts": [
          233,
          245,
          274,
          356
        ],
        "name": "Faucet",
        "nameLocation": "145:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "dc79a7fc",
            "id": 12,
            "mutability": "mutable",
            "name": "numberOfFunders",
            "nameLocation": "447:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 233,
            "src": "435:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "435:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 14,
            "mutability": "mutable",
            "name": "fund",
            "nameLocation": "479:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 233,
            "src": "466:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "466:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "canonicalName": "Faucet.FunderInfo",
            "id": 19,
            "members": [
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "numberOfDonations",
                "nameLocation": "516:17:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "511:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "511:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "totalDonations",
                "nameLocation": "544:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "539:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 17,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "539:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "FunderInfo",
            "nameLocation": "494:10:0",
            "nodeType": "StructDefinition",
            "scope": 233,
            "src": "487:76:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 24,
            "mutability": "mutable",
            "name": "funders",
            "nameLocation": "605:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 233,
            "src": "566:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderInfo_$19_storage_$",
              "typeString": "mapping(address => struct Faucet.FunderInfo)"
            },
            "typeName": {
              "id": 23,
              "keyType": {
                "id": 20,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "574:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "566:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderInfo_$19_storage_$",
                "typeString": "mapping(address => struct Faucet.FunderInfo)"
              },
              "valueType": {
                "id": 22,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 21,
                  "name": "FunderInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19,
                  "src": "585:10:0"
                },
                "referencedDeclaration": 19,
                "src": "585:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_FunderInfo_$19_storage_ptr",
                  "typeString": "struct Faucet.FunderInfo"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "lookUpFunders",
            "nameLocation": "649:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 233,
            "src": "616:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 27,
              "keyType": {
                "id": 25,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "624:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "616:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 26,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "632:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "999:209:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 36,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 34,
                          "name": "withdrawAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "1013:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "313030303030303030303030303030303030",
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1031:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "100000000000000000"
                        },
                        "src": "1013:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "576974686472617720616d6f756e742063616e6e6f742062652067726561746572207468616e20302e31206574686572",
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1051:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef5f77fb52690bea807fe570986f1f372fc9268498e1b3677417896c667d9b04",
                          "typeString": "literal_string \"Withdraw amount cannot be greater than 0.1 ether\""
                        },
                        "value": "Withdraw amount cannot be greater than 0.1 ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef5f77fb52690bea807fe570986f1f372fc9268498e1b3677417896c667d9b04",
                          "typeString": "literal_string \"Withdraw amount cannot be greater than 0.1 ether\""
                        }
                      ],
                      "id": 33,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1005:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1005:97:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "1005:97:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 41,
                          "name": "withdrawAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "1116:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 42,
                          "name": "fund",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "1134:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1116:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742066756e6420666f722074686520726571756573746564207769746864726177616c20616d6f756e74",
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1140:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce7096bd9cb0545aeefc0bc22c48cdeb024f26114f45277c91f0841533660af6",
                          "typeString": "literal_string \"Insufficient fund for the requested withdrawal amount\""
                        },
                        "value": "Insufficient fund for the requested withdrawal amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce7096bd9cb0545aeefc0bc22c48cdeb024f26114f45277c91f0841533660af6",
                          "typeString": "literal_string \"Insufficient fund for the requested withdrawal amount\""
                        }
                      ],
                      "id": 40,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1108:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1108:88:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "1108:88:0"
                },
                {
                  "id": 47,
                  "nodeType": "PlaceholderStatement",
                  "src": "1202:1:0"
                }
              ]
            },
            "documentation": {
              "id": 29,
              "nodeType": "StructuredDocumentation",
              "src": "667:284:0",
              "text": "The modifier can be place at the definition of any method of the contract,\nand is something like a middleware, \nthis `limitWithdrawal` modifier can be reused as a modifier\nthe `_` here will call the function body if the required conditions are passed"
            },
            "id": 49,
            "name": "limitWithdrawal",
            "nameLocation": "963:15:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "withdrawAmount",
                  "nameLocation": "984:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "979:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "979:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "978:21:0"
            },
            "src": "954:254:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "1605:37:0",
              "statements": []
            },
            "documentation": {
              "id": 50,
              "nodeType": "StructuredDocumentation",
              "src": "1212:362:0",
              "text": "- this is a special function\n- it's called when you make a tx that doesn't specify function name to call\n- It executes on calls to the contract with no data (calldata), e.g. calls made via send() or transfer().\n- External function are part of the contract interface \nwhich means they can be called via contracts and other txs"
            },
            "id": 54,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1585:2:0"
            },
            "returnParameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1605:0:0"
            },
            "scope": 233,
            "src": "1578:64:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              265
            ],
            "body": {
              "id": 62,
              "nodeType": "Block",
              "src": "1703:43:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "48656c6c6f20576562332c2066726f6d20466175636574",
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1716:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c76fdb1146e4b895bdabbc1f31ffeb334f81988eb299b9e0c8d47fa6f07a5453",
                      "typeString": "literal_string \"Hello Web3, from Faucet\""
                    },
                    "value": "Hello Web3, from Faucet"
                  },
                  "functionReturnParameters": 59,
                  "id": 61,
                  "nodeType": "Return",
                  "src": "1709:32:0"
                }
              ]
            },
            "functionSelector": "7966b4f6",
            "id": 63,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emitLogs",
            "nameLocation": "1655:8:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 56,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1673:8:0"
            },
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1663:2:0"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "1695:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1695:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1694:9:0"
            },
            "scope": 233,
            "src": "1646:100:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              239
            ],
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "1786:498:0",
              "statements": [
                {
                  "assignments": [
                    67
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67,
                      "mutability": "mutable",
                      "name": "funderAddress",
                      "nameLocation": "1800:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 127,
                      "src": "1792:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 66,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1792:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 70,
                  "initialValue": {
                    "expression": {
                      "id": 68,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1816:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1816:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1792:34:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 71,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1837:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1837:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 73,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1849:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1837:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81,
                  "nodeType": "IfStatement",
                  "src": "1833:51:0",
                  "trueBody": {
                    "id": 80,
                    "nodeType": "Block",
                    "src": "1852:32:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 75,
                            "name": "fund",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "1860:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 76,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1868:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 77,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "1868:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1860:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 79,
                        "nodeType": "ExpressionStatement",
                        "src": "1860:17:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 82,
                          "name": "funders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "1893:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderInfo_$19_storage_$",
                            "typeString": "mapping(address => struct Faucet.FunderInfo storage ref)"
                          }
                        },
                        "id": 84,
                        "indexExpression": {
                          "id": 83,
                          "name": "funderAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "1901:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1893:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FunderInfo_$19_storage",
                          "typeString": "struct Faucet.FunderInfo storage ref"
                        }
                      },
                      "id": 85,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numberOfDonations",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "1893:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1937:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1893:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2162:118:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 110,
                                "name": "funders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24,
                                "src": "2170:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderInfo_$19_storage_$",
                                  "typeString": "mapping(address => struct Faucet.FunderInfo storage ref)"
                                }
                              },
                              "id": 112,
                              "indexExpression": {
                                "id": 111,
                                "name": "funderAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67,
                                "src": "2178:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2170:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FunderInfo_$19_storage",
                                "typeString": "struct Faucet.FunderInfo storage ref"
                              }
                            },
                            "id": 113,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "numberOfDonations",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16,
                            "src": "2170:40:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2214:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2170:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 116,
                        "nodeType": "ExpressionStatement",
                        "src": "2170:45:0"
                      },
                      {
                        "expression": {
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 117,
                                "name": "funders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24,
                                "src": "2223:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderInfo_$19_storage_$",
                                  "typeString": "mapping(address => struct Faucet.FunderInfo storage ref)"
                                }
                              },
                              "id": 119,
                              "indexExpression": {
                                "id": 118,
                                "name": "funderAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67,
                                "src": "2231:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2223:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FunderInfo_$19_storage",
                                "typeString": "struct Faucet.FunderInfo storage ref"
                              }
                            },
                            "id": 120,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalDonations",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18,
                            "src": "2223:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 121,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2264:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "2264:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2223:50:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2223:50:0"
                      }
                    ]
                  },
                  "id": 126,
                  "nodeType": "IfStatement",
                  "src": "1890:390:0",
                  "trueBody": {
                    "id": 109,
                    "nodeType": "Block",
                    "src": "1939:217:0",
                    "statements": [
                      {
                        "assignments": [
                          89
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 89,
                            "mutability": "mutable",
                            "name": "index",
                            "nameLocation": "1952:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 109,
                            "src": "1947:10:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 88,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "1947:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 92,
                        "initialValue": {
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1960:17:0",
                          "subExpression": {
                            "id": 90,
                            "name": "numberOfFunders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "1960:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1947:30:0"
                      },
                      {
                        "expression": {
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 93,
                              "name": "funders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "1992:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderInfo_$19_storage_$",
                                "typeString": "mapping(address => struct Faucet.FunderInfo storage ref)"
                              }
                            },
                            "id": 95,
                            "indexExpression": {
                              "id": 94,
                              "name": "funderAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "2000:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1992:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FunderInfo_$19_storage",
                              "typeString": "struct Faucet.FunderInfo storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 97,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2058:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              {
                                "expression": {
                                  "id": 98,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2086:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 99,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "2086:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 96,
                              "name": "FunderInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "2017:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_FunderInfo_$19_storage_ptr_$",
                                "typeString": "type(struct Faucet.FunderInfo storage pointer)"
                              }
                            },
                            "id": 100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "numberOfDonations",
                              "totalDonations"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "2017:87:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FunderInfo_$19_memory_ptr",
                              "typeString": "struct Faucet.FunderInfo memory"
                            }
                          },
                          "src": "1992:112:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FunderInfo_$19_storage",
                            "typeString": "struct Faucet.FunderInfo storage ref"
                          }
                        },
                        "id": 102,
                        "nodeType": "ExpressionStatement",
                        "src": "1992:112:0"
                      },
                      {
                        "expression": {
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 103,
                              "name": "lookUpFunders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "2113:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 105,
                            "indexExpression": {
                              "id": 104,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89,
                              "src": "2127:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2113:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 106,
                            "name": "funderAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "2136:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2113:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 108,
                        "nodeType": "ExpressionStatement",
                        "src": "2113:36:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "a26759cb",
            "id": 128,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addFunds",
            "nameLocation": "1759:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1767:2:0"
            },
            "returnParameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1786:0:0"
            },
            "scope": 233,
            "src": "1750:534:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "2352:22:0",
              "statements": [
                {
                  "expression": {
                    "id": 135,
                    "name": "fund",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14,
                    "src": "2365:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 134,
                  "id": 136,
                  "nodeType": "Return",
                  "src": "2358:11:0"
                }
              ]
            },
            "functionSelector": "8e543a7c",
            "id": 138,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 131,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 130,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 333,
                  "src": "2328:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2328:9:0"
              }
            ],
            "name": "getAvailableFund",
            "nameLocation": "2297:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2313:2:0"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "2346:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2346:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2345:6:0"
            },
            "scope": 233,
            "src": "2288:86:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              244
            ],
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "2457:83:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 152,
                        "name": "withdrawAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "2492:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 148,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2471:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2471:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2463:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 146,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2463:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2463:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2463:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2463:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "2463:44:0"
                },
                {
                  "expression": {
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 155,
                      "name": "fund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "2513:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 156,
                      "name": "withdrawAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "2521:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2513:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "2513:22:0"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 143,
                    "name": "withdrawAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 140,
                    "src": "2441:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 144,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 142,
                  "name": "limitWithdrawal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49,
                  "src": "2425:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2425:31:0"
              }
            ],
            "name": "withdraw",
            "nameLocation": "2388:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "withdrawAmount",
                  "nameLocation": "2402:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "2397:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2397:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2396:21:0"
            },
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2457:0:0"
            },
            "scope": 233,
            "src": "2379:161:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "2630:49:0",
              "statements": [
                {
                  "expression": {
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 168,
                      "name": "funder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "2636:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FunderInfo_$19_memory_ptr",
                        "typeString": "struct Faucet.FunderInfo memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 169,
                        "name": "funders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "2645:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderInfo_$19_storage_$",
                          "typeString": "mapping(address => struct Faucet.FunderInfo storage ref)"
                        }
                      },
                      "id": 173,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 170,
                          "name": "lookUpFunders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "2653:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 172,
                        "indexExpression": {
                          "id": 171,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 162,
                          "src": "2667:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2653:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2645:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FunderInfo_$19_storage",
                        "typeString": "struct Faucet.FunderInfo storage ref"
                      }
                    },
                    "src": "2636:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FunderInfo_$19_memory_ptr",
                      "typeString": "struct Faucet.FunderInfo memory"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "2636:38:0"
                }
              ]
            },
            "functionSelector": "c218deca",
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFunderAtIndex",
            "nameLocation": "2553:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "2575:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "2570:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2570:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2569:12:0"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "funder",
                  "nameLocation": "2622:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "2604:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FunderInfo_$19_memory_ptr",
                    "typeString": "struct Faucet.FunderInfo"
                  },
                  "typeName": {
                    "id": 165,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 164,
                      "name": "FunderInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19,
                      "src": "2604:10:0"
                    },
                    "referencedDeclaration": 19,
                    "src": "2604:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FunderInfo_$19_storage_ptr",
                      "typeString": "struct Faucet.FunderInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2602:27:0"
            },
            "scope": 233,
            "src": "2544:135:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 220,
              "nodeType": "Block",
              "src": "2749:219:0",
              "statements": [
                {
                  "assignments": [
                    188
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 188,
                      "mutability": "mutable",
                      "name": "_funders",
                      "nameLocation": "2775:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 220,
                      "src": "2755:28:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Faucet.FunderInfo[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 186,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 185,
                            "name": "FunderInfo",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 19,
                            "src": "2755:10:0"
                          },
                          "referencedDeclaration": 19,
                          "src": "2755:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FunderInfo_$19_storage_ptr",
                            "typeString": "struct Faucet.FunderInfo"
                          }
                        },
                        "id": 187,
                        "nodeType": "ArrayTypeName",
                        "src": "2755:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FunderInfo_$19_storage_$dyn_storage_ptr",
                          "typeString": "struct Faucet.FunderInfo[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 195,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 193,
                        "name": "numberOfFunders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2803:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2786:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Faucet.FunderInfo memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 190,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 189,
                            "name": "FunderInfo",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 19,
                            "src": "2790:10:0"
                          },
                          "referencedDeclaration": 19,
                          "src": "2790:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FunderInfo_$19_storage_ptr",
                            "typeString": "struct Faucet.FunderInfo"
                          }
                        },
                        "id": 191,
                        "nodeType": "ArrayTypeName",
                        "src": "2790:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FunderInfo_$19_storage_$dyn_storage_ptr",
                          "typeString": "struct Faucet.FunderInfo[]"
                        }
                      }
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2786:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Faucet.FunderInfo memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2755:64:0"
                },
                {
                  "body": {
                    "id": 216,
                    "nodeType": "Block",
                    "src": "2880:62:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 206,
                              "name": "_funders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 188,
                              "src": "2888:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Faucet.FunderInfo memory[] memory"
                              }
                            },
                            "id": 208,
                            "indexExpression": {
                              "id": 207,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 197,
                              "src": "2897:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2888:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FunderInfo_$19_memory_ptr",
                              "typeString": "struct Faucet.FunderInfo memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 209,
                              "name": "funders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "2906:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderInfo_$19_storage_$",
                                "typeString": "mapping(address => struct Faucet.FunderInfo storage ref)"
                              }
                            },
                            "id": 213,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 210,
                                "name": "lookUpFunders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28,
                                "src": "2914:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                  "typeString": "mapping(uint256 => address)"
                                }
                              },
                              "id": 212,
                              "indexExpression": {
                                "id": 211,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 197,
                                "src": "2928:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2914:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2906:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FunderInfo_$19_storage",
                              "typeString": "struct Faucet.FunderInfo storage ref"
                            }
                          },
                          "src": "2888:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FunderInfo_$19_memory_ptr",
                            "typeString": "struct Faucet.FunderInfo memory"
                          }
                        },
                        "id": 215,
                        "nodeType": "ExpressionStatement",
                        "src": "2888:47:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 200,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 197,
                      "src": "2846:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 201,
                      "name": "numberOfFunders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "2854:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2846:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 217,
                  "initializationExpression": {
                    "assignments": [
                      197
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 197,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "2835:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "2830:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2830:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 199,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2843:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2830:14:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2871:7:0",
                      "subExpression": {
                        "id": 203,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "2871:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 205,
                    "nodeType": "ExpressionStatement",
                    "src": "2871:7:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "2825:117:0"
                },
                {
                  "expression": {
                    "id": 218,
                    "name": "_funders",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 188,
                    "src": "2955:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Faucet.FunderInfo memory[] memory"
                    }
                  },
                  "functionReturnParameters": 183,
                  "id": 219,
                  "nodeType": "Return",
                  "src": "2948:15:0"
                }
              ]
            },
            "functionSelector": "6fbbb55d",
            "id": 221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllFunders",
            "nameLocation": "2692:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2705:2:0"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "2728:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Faucet.FunderInfo[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 180,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 179,
                        "name": "FunderInfo",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 19,
                        "src": "2728:10:0"
                      },
                      "referencedDeclaration": 19,
                      "src": "2728:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FunderInfo_$19_storage_ptr",
                        "typeString": "struct Faucet.FunderInfo"
                      }
                    },
                    "id": 181,
                    "nodeType": "ArrayTypeName",
                    "src": "2728:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FunderInfo_$19_storage_$dyn_storage_ptr",
                      "typeString": "struct Faucet.FunderInfo[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2727:21:0"
            },
            "scope": 233,
            "src": "2683:285:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 231,
              "nodeType": "Block",
              "src": "3259:25:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_rational_4_by_1",
                      "typeString": "int_const 4"
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "32",
                      "id": 227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3273:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3277:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "3273:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4_by_1",
                      "typeString": "int_const 4"
                    }
                  },
                  "functionReturnParameters": 226,
                  "id": 230,
                  "nodeType": "Return",
                  "src": "3266:12:0"
                }
              ]
            },
            "documentation": {
              "id": 222,
              "nodeType": "StructuredDocumentation",
              "src": "2972:232:0",
              "text": "modifiers: `pure` & `view` - no any gas fee incurs \nview - indicates the given function will not change the storage state in any way\npure - even more strict, it will not even allow reading the storage state"
            },
            "functionSelector": "a23f8a3d",
            "id": 232,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "justTesting",
            "nameLocation": "3217:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3228:2:0"
            },
            "returnParameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 225,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "3253:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3253:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3252:6:0"
            },
            "scope": 233,
            "src": "3208:76:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 234,
        "src": "136:3377:0",
        "usedErrors": []
      }
    ],
    "src": "32:5539:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/FaucetContract.sol",
    "exportedSymbols": {
      "Faucet": [
        233
      ],
      "IFaucet": [
        245
      ],
      "Logger": [
        274
      ],
      "Owned": [
        356
      ]
    },
    "id": 234,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "absolutePath": "project:/contracts/Owned.sol",
        "file": "./Owned.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 234,
        "sourceUnit": 357,
        "src": "66:21:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Logger.sol",
        "file": "./Logger.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 234,
        "sourceUnit": 275,
        "src": "88:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/IFaucet.sol",
        "file": "./IFaucet.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 234,
        "sourceUnit": 246,
        "src": "111:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "Owned",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 356,
              "src": "155:5:0"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "155:5:0"
          },
          {
            "baseName": {
              "id": 7,
              "name": "Logger",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 274,
              "src": "162:6:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "162:6:0"
          },
          {
            "baseName": {
              "id": 9,
              "name": "IFaucet",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 245,
              "src": "170:7:0"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "170:7:0"
          }
        ],
        "canonicalName": "Faucet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 233,
        "linearizedBaseContracts": [
          233,
          245,
          274,
          356
        ],
        "name": "Faucet",
        "nameLocation": "145:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "dc79a7fc",
            "id": 12,
            "mutability": "mutable",
            "name": "numberOfFunders",
            "nameLocation": "447:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 233,
            "src": "435:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "435:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 14,
            "mutability": "mutable",
            "name": "fund",
            "nameLocation": "479:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 233,
            "src": "466:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "466:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "canonicalName": "Faucet.FunderInfo",
            "id": 19,
            "members": [
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "numberOfDonations",
                "nameLocation": "516:17:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "511:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "511:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "totalDonations",
                "nameLocation": "544:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "539:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 17,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "539:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "FunderInfo",
            "nameLocation": "494:10:0",
            "nodeType": "StructDefinition",
            "scope": 233,
            "src": "487:76:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 24,
            "mutability": "mutable",
            "name": "funders",
            "nameLocation": "605:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 233,
            "src": "566:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderInfo_$19_storage_$",
              "typeString": "mapping(address => struct Faucet.FunderInfo)"
            },
            "typeName": {
              "id": 23,
              "keyType": {
                "id": 20,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "574:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "566:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderInfo_$19_storage_$",
                "typeString": "mapping(address => struct Faucet.FunderInfo)"
              },
              "valueType": {
                "id": 22,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 21,
                  "name": "FunderInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19,
                  "src": "585:10:0"
                },
                "referencedDeclaration": 19,
                "src": "585:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_FunderInfo_$19_storage_ptr",
                  "typeString": "struct Faucet.FunderInfo"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "lookUpFunders",
            "nameLocation": "649:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 233,
            "src": "616:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 27,
              "keyType": {
                "id": 25,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "624:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "616:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 26,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "632:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "999:209:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 36,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 34,
                          "name": "withdrawAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "1013:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "313030303030303030303030303030303030",
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1031:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "100000000000000000"
                        },
                        "src": "1013:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "576974686472617720616d6f756e742063616e6e6f742062652067726561746572207468616e20302e31206574686572",
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1051:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef5f77fb52690bea807fe570986f1f372fc9268498e1b3677417896c667d9b04",
                          "typeString": "literal_string \"Withdraw amount cannot be greater than 0.1 ether\""
                        },
                        "value": "Withdraw amount cannot be greater than 0.1 ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef5f77fb52690bea807fe570986f1f372fc9268498e1b3677417896c667d9b04",
                          "typeString": "literal_string \"Withdraw amount cannot be greater than 0.1 ether\""
                        }
                      ],
                      "id": 33,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1005:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1005:97:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "1005:97:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 41,
                          "name": "withdrawAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "1116:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 42,
                          "name": "fund",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "1134:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1116:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742066756e6420666f722074686520726571756573746564207769746864726177616c20616d6f756e74",
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1140:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce7096bd9cb0545aeefc0bc22c48cdeb024f26114f45277c91f0841533660af6",
                          "typeString": "literal_string \"Insufficient fund for the requested withdrawal amount\""
                        },
                        "value": "Insufficient fund for the requested withdrawal amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce7096bd9cb0545aeefc0bc22c48cdeb024f26114f45277c91f0841533660af6",
                          "typeString": "literal_string \"Insufficient fund for the requested withdrawal amount\""
                        }
                      ],
                      "id": 40,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1108:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1108:88:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "1108:88:0"
                },
                {
                  "id": 47,
                  "nodeType": "PlaceholderStatement",
                  "src": "1202:1:0"
                }
              ]
            },
            "documentation": {
              "id": 29,
              "nodeType": "StructuredDocumentation",
              "src": "667:284:0",
              "text": "The modifier can be place at the definition of any method of the contract,\nand is something like a middleware, \nthis `limitWithdrawal` modifier can be reused as a modifier\nthe `_` here will call the function body if the required conditions are passed"
            },
            "id": 49,
            "name": "limitWithdrawal",
            "nameLocation": "963:15:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "withdrawAmount",
                  "nameLocation": "984:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "979:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "979:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "978:21:0"
            },
            "src": "954:254:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "1605:37:0",
              "statements": []
            },
            "documentation": {
              "id": 50,
              "nodeType": "StructuredDocumentation",
              "src": "1212:362:0",
              "text": "- this is a special function\n- it's called when you make a tx that doesn't specify function name to call\n- It executes on calls to the contract with no data (calldata), e.g. calls made via send() or transfer().\n- External function are part of the contract interface \nwhich means they can be called via contracts and other txs"
            },
            "id": 54,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1585:2:0"
            },
            "returnParameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1605:0:0"
            },
            "scope": 233,
            "src": "1578:64:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              265
            ],
            "body": {
              "id": 62,
              "nodeType": "Block",
              "src": "1703:43:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "48656c6c6f20576562332c2066726f6d20466175636574",
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1716:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c76fdb1146e4b895bdabbc1f31ffeb334f81988eb299b9e0c8d47fa6f07a5453",
                      "typeString": "literal_string \"Hello Web3, from Faucet\""
                    },
                    "value": "Hello Web3, from Faucet"
                  },
                  "functionReturnParameters": 59,
                  "id": 61,
                  "nodeType": "Return",
                  "src": "1709:32:0"
                }
              ]
            },
            "functionSelector": "7966b4f6",
            "id": 63,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emitLogs",
            "nameLocation": "1655:8:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 56,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1673:8:0"
            },
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1663:2:0"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "1695:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1695:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1694:9:0"
            },
            "scope": 233,
            "src": "1646:100:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              239
            ],
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "1786:498:0",
              "statements": [
                {
                  "assignments": [
                    67
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67,
                      "mutability": "mutable",
                      "name": "funderAddress",
                      "nameLocation": "1800:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 127,
                      "src": "1792:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 66,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1792:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 70,
                  "initialValue": {
                    "expression": {
                      "id": 68,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1816:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1816:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1792:34:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 71,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1837:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1837:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 73,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1849:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1837:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81,
                  "nodeType": "IfStatement",
                  "src": "1833:51:0",
                  "trueBody": {
                    "id": 80,
                    "nodeType": "Block",
                    "src": "1852:32:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 75,
                            "name": "fund",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "1860:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 76,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1868:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 77,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "1868:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1860:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 79,
                        "nodeType": "ExpressionStatement",
                        "src": "1860:17:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 82,
                          "name": "funders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "1893:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderInfo_$19_storage_$",
                            "typeString": "mapping(address => struct Faucet.FunderInfo storage ref)"
                          }
                        },
                        "id": 84,
                        "indexExpression": {
                          "id": 83,
                          "name": "funderAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "1901:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1893:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FunderInfo_$19_storage",
                          "typeString": "struct Faucet.FunderInfo storage ref"
                        }
                      },
                      "id": 85,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numberOfDonations",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "1893:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1937:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1893:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2162:118:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 110,
                                "name": "funders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24,
                                "src": "2170:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderInfo_$19_storage_$",
                                  "typeString": "mapping(address => struct Faucet.FunderInfo storage ref)"
                                }
                              },
                              "id": 112,
                              "indexExpression": {
                                "id": 111,
                                "name": "funderAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67,
                                "src": "2178:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2170:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FunderInfo_$19_storage",
                                "typeString": "struct Faucet.FunderInfo storage ref"
                              }
                            },
                            "id": 113,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "numberOfDonations",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16,
                            "src": "2170:40:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2214:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2170:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 116,
                        "nodeType": "ExpressionStatement",
                        "src": "2170:45:0"
                      },
                      {
                        "expression": {
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 117,
                                "name": "funders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24,
                                "src": "2223:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderInfo_$19_storage_$",
                                  "typeString": "mapping(address => struct Faucet.FunderInfo storage ref)"
                                }
                              },
                              "id": 119,
                              "indexExpression": {
                                "id": 118,
                                "name": "funderAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67,
                                "src": "2231:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2223:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FunderInfo_$19_storage",
                                "typeString": "struct Faucet.FunderInfo storage ref"
                              }
                            },
                            "id": 120,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalDonations",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18,
                            "src": "2223:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 121,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2264:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "2264:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2223:50:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2223:50:0"
                      }
                    ]
                  },
                  "id": 126,
                  "nodeType": "IfStatement",
                  "src": "1890:390:0",
                  "trueBody": {
                    "id": 109,
                    "nodeType": "Block",
                    "src": "1939:217:0",
                    "statements": [
                      {
                        "assignments": [
                          89
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 89,
                            "mutability": "mutable",
                            "name": "index",
                            "nameLocation": "1952:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 109,
                            "src": "1947:10:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 88,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "1947:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 92,
                        "initialValue": {
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1960:17:0",
                          "subExpression": {
                            "id": 90,
                            "name": "numberOfFunders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "1960:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1947:30:0"
                      },
                      {
                        "expression": {
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 93,
                              "name": "funders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "1992:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderInfo_$19_storage_$",
                                "typeString": "mapping(address => struct Faucet.FunderInfo storage ref)"
                              }
                            },
                            "id": 95,
                            "indexExpression": {
                              "id": 94,
                              "name": "funderAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "2000:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1992:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FunderInfo_$19_storage",
                              "typeString": "struct Faucet.FunderInfo storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 97,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2058:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              {
                                "expression": {
                                  "id": 98,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2086:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 99,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "2086:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 96,
                              "name": "FunderInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "2017:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_FunderInfo_$19_storage_ptr_$",
                                "typeString": "type(struct Faucet.FunderInfo storage pointer)"
                              }
                            },
                            "id": 100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "numberOfDonations",
                              "totalDonations"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "2017:87:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FunderInfo_$19_memory_ptr",
                              "typeString": "struct Faucet.FunderInfo memory"
                            }
                          },
                          "src": "1992:112:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FunderInfo_$19_storage",
                            "typeString": "struct Faucet.FunderInfo storage ref"
                          }
                        },
                        "id": 102,
                        "nodeType": "ExpressionStatement",
                        "src": "1992:112:0"
                      },
                      {
                        "expression": {
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 103,
                              "name": "lookUpFunders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "2113:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 105,
                            "indexExpression": {
                              "id": 104,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89,
                              "src": "2127:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2113:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 106,
                            "name": "funderAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "2136:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2113:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 108,
                        "nodeType": "ExpressionStatement",
                        "src": "2113:36:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "a26759cb",
            "id": 128,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addFunds",
            "nameLocation": "1759:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1767:2:0"
            },
            "returnParameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1786:0:0"
            },
            "scope": 233,
            "src": "1750:534:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "2352:22:0",
              "statements": [
                {
                  "expression": {
                    "id": 135,
                    "name": "fund",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14,
                    "src": "2365:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 134,
                  "id": 136,
                  "nodeType": "Return",
                  "src": "2358:11:0"
                }
              ]
            },
            "functionSelector": "8e543a7c",
            "id": 138,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 131,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 130,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 333,
                  "src": "2328:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2328:9:0"
              }
            ],
            "name": "getAvailableFund",
            "nameLocation": "2297:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2313:2:0"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "2346:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2346:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2345:6:0"
            },
            "scope": 233,
            "src": "2288:86:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              244
            ],
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "2457:83:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 152,
                        "name": "withdrawAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "2492:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 148,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2471:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2471:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2463:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 146,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2463:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2463:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2463:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2463:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "2463:44:0"
                },
                {
                  "expression": {
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 155,
                      "name": "fund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "2513:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 156,
                      "name": "withdrawAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "2521:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2513:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "2513:22:0"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 143,
                    "name": "withdrawAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 140,
                    "src": "2441:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 144,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 142,
                  "name": "limitWithdrawal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49,
                  "src": "2425:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2425:31:0"
              }
            ],
            "name": "withdraw",
            "nameLocation": "2388:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "withdrawAmount",
                  "nameLocation": "2402:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "2397:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2397:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2396:21:0"
            },
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2457:0:0"
            },
            "scope": 233,
            "src": "2379:161:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "2630:49:0",
              "statements": [
                {
                  "expression": {
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 168,
                      "name": "funder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "2636:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FunderInfo_$19_memory_ptr",
                        "typeString": "struct Faucet.FunderInfo memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 169,
                        "name": "funders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "2645:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderInfo_$19_storage_$",
                          "typeString": "mapping(address => struct Faucet.FunderInfo storage ref)"
                        }
                      },
                      "id": 173,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 170,
                          "name": "lookUpFunders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "2653:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 172,
                        "indexExpression": {
                          "id": 171,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 162,
                          "src": "2667:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2653:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2645:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FunderInfo_$19_storage",
                        "typeString": "struct Faucet.FunderInfo storage ref"
                      }
                    },
                    "src": "2636:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FunderInfo_$19_memory_ptr",
                      "typeString": "struct Faucet.FunderInfo memory"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "2636:38:0"
                }
              ]
            },
            "functionSelector": "c218deca",
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFunderAtIndex",
            "nameLocation": "2553:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "2575:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "2570:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2570:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2569:12:0"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "funder",
                  "nameLocation": "2622:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "2604:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FunderInfo_$19_memory_ptr",
                    "typeString": "struct Faucet.FunderInfo"
                  },
                  "typeName": {
                    "id": 165,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 164,
                      "name": "FunderInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19,
                      "src": "2604:10:0"
                    },
                    "referencedDeclaration": 19,
                    "src": "2604:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FunderInfo_$19_storage_ptr",
                      "typeString": "struct Faucet.FunderInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2602:27:0"
            },
            "scope": 233,
            "src": "2544:135:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 220,
              "nodeType": "Block",
              "src": "2749:219:0",
              "statements": [
                {
                  "assignments": [
                    188
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 188,
                      "mutability": "mutable",
                      "name": "_funders",
                      "nameLocation": "2775:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 220,
                      "src": "2755:28:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Faucet.FunderInfo[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 186,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 185,
                            "name": "FunderInfo",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 19,
                            "src": "2755:10:0"
                          },
                          "referencedDeclaration": 19,
                          "src": "2755:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FunderInfo_$19_storage_ptr",
                            "typeString": "struct Faucet.FunderInfo"
                          }
                        },
                        "id": 187,
                        "nodeType": "ArrayTypeName",
                        "src": "2755:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FunderInfo_$19_storage_$dyn_storage_ptr",
                          "typeString": "struct Faucet.FunderInfo[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 195,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 193,
                        "name": "numberOfFunders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2803:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2786:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Faucet.FunderInfo memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 190,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 189,
                            "name": "FunderInfo",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 19,
                            "src": "2790:10:0"
                          },
                          "referencedDeclaration": 19,
                          "src": "2790:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FunderInfo_$19_storage_ptr",
                            "typeString": "struct Faucet.FunderInfo"
                          }
                        },
                        "id": 191,
                        "nodeType": "ArrayTypeName",
                        "src": "2790:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FunderInfo_$19_storage_$dyn_storage_ptr",
                          "typeString": "struct Faucet.FunderInfo[]"
                        }
                      }
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2786:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Faucet.FunderInfo memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2755:64:0"
                },
                {
                  "body": {
                    "id": 216,
                    "nodeType": "Block",
                    "src": "2880:62:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 206,
                              "name": "_funders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 188,
                              "src": "2888:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Faucet.FunderInfo memory[] memory"
                              }
                            },
                            "id": 208,
                            "indexExpression": {
                              "id": 207,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 197,
                              "src": "2897:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2888:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FunderInfo_$19_memory_ptr",
                              "typeString": "struct Faucet.FunderInfo memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 209,
                              "name": "funders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "2906:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderInfo_$19_storage_$",
                                "typeString": "mapping(address => struct Faucet.FunderInfo storage ref)"
                              }
                            },
                            "id": 213,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 210,
                                "name": "lookUpFunders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28,
                                "src": "2914:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                  "typeString": "mapping(uint256 => address)"
                                }
                              },
                              "id": 212,
                              "indexExpression": {
                                "id": 211,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 197,
                                "src": "2928:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2914:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2906:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FunderInfo_$19_storage",
                              "typeString": "struct Faucet.FunderInfo storage ref"
                            }
                          },
                          "src": "2888:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FunderInfo_$19_memory_ptr",
                            "typeString": "struct Faucet.FunderInfo memory"
                          }
                        },
                        "id": 215,
                        "nodeType": "ExpressionStatement",
                        "src": "2888:47:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 200,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 197,
                      "src": "2846:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 201,
                      "name": "numberOfFunders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "2854:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2846:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 217,
                  "initializationExpression": {
                    "assignments": [
                      197
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 197,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "2835:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "2830:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2830:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 199,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2843:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2830:14:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2871:7:0",
                      "subExpression": {
                        "id": 203,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "2871:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 205,
                    "nodeType": "ExpressionStatement",
                    "src": "2871:7:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "2825:117:0"
                },
                {
                  "expression": {
                    "id": 218,
                    "name": "_funders",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 188,
                    "src": "2955:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Faucet.FunderInfo memory[] memory"
                    }
                  },
                  "functionReturnParameters": 183,
                  "id": 219,
                  "nodeType": "Return",
                  "src": "2948:15:0"
                }
              ]
            },
            "functionSelector": "6fbbb55d",
            "id": 221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllFunders",
            "nameLocation": "2692:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2705:2:0"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "2728:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_FunderInfo_$19_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Faucet.FunderInfo[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 180,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 179,
                        "name": "FunderInfo",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 19,
                        "src": "2728:10:0"
                      },
                      "referencedDeclaration": 19,
                      "src": "2728:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FunderInfo_$19_storage_ptr",
                        "typeString": "struct Faucet.FunderInfo"
                      }
                    },
                    "id": 181,
                    "nodeType": "ArrayTypeName",
                    "src": "2728:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FunderInfo_$19_storage_$dyn_storage_ptr",
                      "typeString": "struct Faucet.FunderInfo[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2727:21:0"
            },
            "scope": 233,
            "src": "2683:285:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 231,
              "nodeType": "Block",
              "src": "3259:25:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_rational_4_by_1",
                      "typeString": "int_const 4"
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "32",
                      "id": 227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3273:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3277:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "3273:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4_by_1",
                      "typeString": "int_const 4"
                    }
                  },
                  "functionReturnParameters": 226,
                  "id": 230,
                  "nodeType": "Return",
                  "src": "3266:12:0"
                }
              ]
            },
            "documentation": {
              "id": 222,
              "nodeType": "StructuredDocumentation",
              "src": "2972:232:0",
              "text": "modifiers: `pure` & `view` - no any gas fee incurs \nview - indicates the given function will not change the storage state in any way\npure - even more strict, it will not even allow reading the storage state"
            },
            "functionSelector": "a23f8a3d",
            "id": 232,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "justTesting",
            "nameLocation": "3217:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3228:2:0"
            },
            "returnParameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 225,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "3253:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3253:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3252:6:0"
            },
            "scope": 233,
            "src": "3208:76:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 234,
        "src": "136:3377:0",
        "usedErrors": []
      }
    ],
    "src": "32:5539:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x94095708C5b114CbC6054eF5198b06107e8ebB3B",
      "transactionHash": "0x6b7830aaa692bdc78ddaa4e8d354a6d8d8152af2d38f67364807f6f044233503"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-08-28T13:24:13.670Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "justTesting()": {
        "notice": "modifiers: `pure` & `view` - no any gas fee incurs  view - indicates the given function will not change the storage state in any way pure - even more strict, it will not even allow reading the storage state"
      }
    },
    "version": 1
  }
}